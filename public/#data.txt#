// ??????? ?????? ?????????
var messaging = firebase.messaging();
if (Notification.permission === 'granted') {
    getToken();
} 

function getToken() {
    // ?????? ?? ????????
    messaging.requestPermission()
        .then(function() {
            // Get Instance ID token. Initially this makes a network call, once retrieved
            // subsequent calls to getToken will return from cache.
            messaging.getToken()
                .then(function(currentToken) {
                    if (currentToken) {
                        //??
                        GcurrentToken = currentToken;
                        console.log(currentToken);
                        sendTokenToServer(currentToken);
                    } else {
                        // ??????? ????????? ?? ??????.
                        showError('No Instance ID token available. Request permission to generate one.');
                        updateUIForPushPermissionRequired();
                        setTokenSentToServer(false);
                    }
                })
                .catch(function(error) {
                    // ??????? ????????? ?? ??????.
                    showError('An error occurred while retrieving token.', error);
                    //??
                    setTokenSentToServer(false);
                });
        })
        .catch(function(error) {
            // ??????? ????????? ?? ??????.
            showError('Unable to get permission to notify.', error);
        });
}

function sendTokenToServer(currentToken) {
    if (!isTokenSentToServer(currentToken)) {
        // ????????? ????? ?? ??????
        console.log('Sending token to server...');
        //??
        setTokenSentToServer(currentToken);
    } else {
        console.log('Token already sent to server so won\'t send it again unless it changes');
    }
}

function setTokenSentToServer(currentToken) {
    if (currentToken) {
        // ?????????? ???????? ?? ?????????? ?????????
        window.localStorage.setItem('sentFirebaseMessagingToken', currentToken);
    } else {
        // ??????? ???????? ?????????? ?????????
        window.localStorage.removeItem('sentFirebaseMessagingToken');
    }
}

function isTokenSentToServer(currentToken) {
    // ???????? ???????? ?? ?????????? ?????????
    return window.localStorage.getItem('sentFirebaseMessagingToken') == currentToken;
}

function showError(error, error_data) {
    // 
    if (typeof error_data !== "undefined") {
        console.error(error + ' ', error_data);
    } else {
        console.error(error);
    }

    alert.show();
    alert_message.html(error);
}

sendNotification();
messaging.onMessage(function(payload) {
    console.log('onMessage:', payload);
});



// ??????? ???????? ???????????
function sendNotification() {
    // ????
    var apikey = 'AAAAhmoKL8U:APA91bHIcGtWyugGJfqAsgsi20I0AurqZTnO7k7WGO10BteIWV1kKL4kfY4IJuU9qWnh4NxT1hKcQT_2kz5dq8Wd1KoEstd1l-6dpsNMS5YiKi1yF8zDfL8tBZH8sa942rUOKBugXo22';

    // ???????? ?????
    messaging.getToken()
        .then(function(currentToken) {
            // ???? (url, method – ????? ???????,
            // headers – ????????? ??????? (??????), 
            // body – ???? ???????: FormData, Blob, ?????? ? ?.?.
            // mode – ???? ??: «same-origin», «no-cors», «cors», ?????????, ? ????? ?????? ?????-?????????? ?????????????? ?????? ??????.
            // credentials – ???? ??: «omit», «same-origin», «include», ?????????, ?????????? ?? ???? ? ????????? ??????????? ?????? ? ????????.
            // cache – ???? ?? «default», «no-store», «reload», «no-cache», «force-cache», «only-if-cached», ?????????, ??? ?????????? ??????
            // redirect – ????? ????????? «follow» ??? ???????? ????????? ??? ???? 30x (????????? ?????????) ??? «error» ??? ????????????? ????????? ??? ??????.)
            fetch('https://fcm.googleapis.com/fcm/send', {
                'method': 'POST',
                'headers': {
                    'Authorization': 'key=' + apikey,
                    'Content-Type': 'application/json'
                },
                'body': JSON.stringify({
                    'notification': {"title": "Portugal vs. Denmark","body": "5 to 1","icon": "favicon.png"},
                    'to': currentToken
                })
                // ??????? ????? ? ??????? json
            }).then(function(response) {
                return response.json();
                // ??????? ????? ? ??????? json
            }).then(function(json) {
                console.log('Response', json);

                if (json.success == 1) {
                    console.log("god");
                } else {
                }
            }).catch(function(error) {
                // ??????????? ??????
                showError(error);
            });
        })
        .catch(function(error) {
             // ??????????? ??????
            showError('Error retrieving Instance ID token.', error);
        });
}

name: Hi
